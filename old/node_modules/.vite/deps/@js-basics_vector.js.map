{
  "version": 3,
  "sources": ["../../@js-basics/vector/src/utils/math.js", "../../@js-basics/vector/src/operator.js", "../../@js-basics/vector/src/utils/css.js", "../../@js-basics/vector/src/point.js", "../../@js-basics/vector/src/vector.js", "../../@js-basics/vector/src/degree.js", "../../@js-basics/vector/src/quaternion.js", "../../@js-basics/vector/src/color.js", "../../@js-basics/vector/src/mat3.js", "../../@js-basics/vector/src/angles.js", "../../@js-basics/vector/src/index.js"],
  "sourcesContent": ["export function isArray (arr) {\n  return Array.isArray(arr) || ArrayBuffer.isView(arr);\n}\n\n// http://schteppe.github.io/cannon.js/docs/files/src_math_Quaternion.js.html\nexport function multQuatVec (quat, vec) {\n  const {\n    x, y, z\n  } = vec;\n  const {\n    x: qx, y: qy, z: qz, w: qw\n  } = quat;\n\n  const ix = qw * x + qy * z - qz * y;\n  const iy = qw * y + qz * x - qx * z;\n  const iz = qw * z + qx * y - qy * x;\n  const iw = -qx * x - qy * y - qz * z;\n  const rx = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  const ry = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  const rz = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return new vec.constructor(rx, ry, rz);\n}\n\nconst angle180 = Math.PI;\nconst angle360 = Math.PI * 2;\n\nexport function normRad (angle) {\n  let mod = angle % angle360;\n  if (mod < -angle180) {\n    mod += angle360;\n  } else if (mod > angle180) {\n    mod -= angle360;\n  }\n  return mod;\n}\n\nexport function acos (fValue) {\n  if (fValue > -1.0) {\n    if (fValue < 1.0) {\n      return Math.acos(fValue);\n    }\n    return 0.0;\n  }\n  return angle180;\n}\n\n// https://www.khronos.org/registry/OpenGL/specs/es/2.0/GLSL_ES_Specification_1.00.pdf page 50 & 51\n// https://stackoverflow.com/questions/24593939/matrix-multiplication-with-vector-in-glsl#answer-24594497\nexport function multiplyMat3Mat3 (matLeft, [mat0, mat1, mat2]) {\n  const [column0, column1, column2] = matLeft;\n  return new matLeft.constructor(\n    new column0.constructor(\n      column0.x * mat0.x + column1.x * mat0.y + column2.x * mat0.z,\n      column0.y * mat0.x + column1.y * mat0.y + column2.y * mat0.z,\n      column0.z * mat0.x + column1.z * mat0.y + column2.z * mat0.z\n    ),\n    new column0.constructor(\n      column0.x * mat1.x + column1.x * mat1.y + column2.x * mat1.z,\n      column0.y * mat1.x + column1.y * mat1.y + column2.y * mat1.z,\n      column0.z * mat1.x + column1.z * mat1.y + column2.z * mat1.z\n    ),\n    new column0.constructor(\n      column0.x * mat2.x + column1.x * mat2.y + column2.x * mat2.z,\n      column0.y * mat2.x + column1.y * mat2.y + column2.y * mat2.z,\n      column0.z * mat2.x + column1.z * mat2.y + column2.z * mat2.z\n    )\n  );\n}\n\nexport function multiplyMat3Vec (matLeft, { x, y, z }) {\n  const [column0, column1, column2] = matLeft;\n  return new column0.constructor(\n    column0.x * x + column1.x * y + column2.x * z,\n    column0.y * x + column1.y * y + column2.y * z,\n    column0.z * x + column1.z * y + column2.z * z\n  );\n}\n\nexport function multiplyVecMat3 (vecLeft, [column0, column1, column2]) {\n  return new vecLeft.constructor(\n    vecLeft.dot(column0),\n    vecLeft.dot(column1),\n    vecLeft.dot(column2)\n  );\n}\n\nexport function multiplyVecMat4 (vecLeft, [column0, column1, column2, column3]) {\n  return new vecLeft.constructor(\n    vecLeft.dot(column0),\n    vecLeft.dot(column1),\n    vecLeft.dot(column2),\n    vecLeft.dot(column3)\n  );\n}\n\nexport function isNumber (nr) {\n  if (typeof nr === 'number' || nr?.constructor === Number) {\n    return true;\n  }\n  return false;\n}\n", "import { isNumber } from './utils/math';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst W = 3;\nconst CHECK_SUM = 9999999999999;\n\nconst DEFAULT = undefined;\nconst VECTOR_LENGTH = Symbol('vector length');\nconst GET_SOURCE = Symbol('get source');\nconst CHECKED = Symbol('checked');\n\nlet inProgress = DEFAULT;\nlet inVector;\nlet elCount;\nconst allChecks = [0, 1, 2, 6, 24, 120, 720, 5760, 51840, 518400, 5702400, 68428800, 889574400, 12454041600, 186810624000];\nconst collect = [];\n\nlet resultCacheIndex = -1;\nlet handlingCache = false;\nconst resultCache = [];\n\nfunction handleProgess (progess, alg, resVec) {\n  inProgress = progess;\n  resultCacheIndex = -1;\n  elCount = 1;\n\n  const res = alg(resVec);\n\n  if (!isNumber(res)) {\n    throw new Error(`\n      your assigned progress did not not return a primitive!\n      calc() does not support logical operators (|| && ==) directly\n\n      instead of calc(() => v1 || v2);\n      use        calc(() => +v1 || +v2);\n\n      instead of calc(() => v1);\n      use        calc(v1);\n      `);\n  }\n  return res;\n}\n\nfunction getVectorLength (vec) {\n  const getSource = vec[GET_SOURCE];\n  if (getSource) {\n    return getSource(vec).length;\n  }\n  return vec[VECTOR_LENGTH] || 3;\n}\n\nfunction maxVector (v1, v2) {\n  if (getVectorLength(v1) > getVectorLength(v2)) {\n    return v1;\n  }\n  return v2;\n}\n\nfunction getVectorValue (vec, index) {\n  elCount += 1;\n\n  if (index === CHECK_SUM) {\n    return elCount;\n  }\n\n  if (index >= getVectorLength(vec)) {\n    return 0;\n  }\n\n  const getSource = vec[GET_SOURCE];\n  if (getSource) {\n    return 1.0 * getSource(vec)[index];\n  }\n  if (index === X) {\n    return 1.0 * vec.x;\n  }\n  if (index === Y) {\n    return 1.0 * vec.y;\n  }\n  if (index === Z) {\n    return 1.0 * vec.z;\n  }\n  if (index === W) {\n    return 1.0 * vec.w;\n  }\n  // really?\n  return undefined;\n}\n\nfunction setVectorValue (vec, index, value) {\n  const getSource = vec[GET_SOURCE];\n  if (getSource) {\n    getSource(vec)[index] = value;\n    return;\n  }\n  if (index === X) {\n    vec.x = value;\n    return;\n  }\n  if (index === Y) {\n    vec.y = value;\n    return;\n  }\n  if (index === Z) {\n    vec.z = value;\n  }\n  if (index === W) {\n    vec.w = value;\n  }\n}\n\nexport function operatorCalc (alg, result) {\n  if (typeof alg !== 'function') {\n    throw new Error('no function assigned');\n  }\n  if (inProgress !== DEFAULT) {\n    throw new Error('something wrong, do you use calc() inside calc?');\n  }\n  try {\n    const noRes = typeof result === 'undefined';\n    const funRes = typeof result === 'function';\n    const resVec = !funRes && !noRes ? result : undefined;\n    const x = handleProgess(X, alg, resVec);\n\n    if (noRes && typeof inVector === 'undefined') {\n      return x;\n    }\n\n    const inLen = inVector ? getVectorLength(inVector) : 0;\n    if (inLen === CHECK_SUM) {\n      if (!alg[CHECKED]) {\n        const checkSum = handleProgess(CHECK_SUM, alg);\n\n        const sum = allChecks[elCount];\n        if (Math.abs(checkSum - sum) > Number.EPSILON) {\n          throw new Error(`\n            algebraic multiplication works only in calls with *\n\n            calc(() => v * m);\n            calc(() => m * v);\n            calc(() => m * m);\n            calc(() => m * m * v);\n\n            `);\n        }\n        alg[CHECKED] = true;\n      }\n\n      let last = collect[0];\n      for (let i = 1; i < elCount - 1; i += 1) {\n        const current = collect[i];\n        if (!last.multiply) {\n          throw new Error(`cannot find method multiply() on ${last}`);\n        }\n        last = last.multiply(current);\n      }\n      return last;\n    }\n    let len = funRes ? result.length : inLen;\n    if (!len) {\n      len = inLen;\n    }\n    if (len < inLen) {\n      throw new Error('Your assigned result Vector cant use higher space Operands than it has');\n    }\n    const target = new Array(len);\n    target[0] = x;\n    if (resVec) {\n      setVectorValue(resVec, inProgress, target[0]);\n    }\n    for (let i = 1; i < len; i += 1) {\n      const val = handleProgess(i, alg, resVec);\n      target[i] = val;\n      if (resVec) {\n        setVectorValue(resVec, inProgress, val);\n      }\n    }\n\n    if (noRes) {\n      return new inVector.constructor(...target);\n    }\n    if (funRes) {\n      return result(...target);\n    }\n    return resVec;\n  } finally {\n    inProgress = DEFAULT;\n    inVector = undefined;\n  }\n}\n\nexport function cachedValueOf (VectorClass, getSource) {\n  const Vector = VectorClass.prototype;\n  Vector[GET_SOURCE] = getSource;\n  const name = 'valueOf';\n  const org = Vector[name];\n\n  Vector[name] = function () {\n    if (inProgress === X) {\n      inVector = inVector ? maxVector(inVector, this) : this;\n      collect[elCount - 1] = this;\n    }\n    if (inProgress === DEFAULT) {\n      return org.call(this);\n    }\n    return getVectorValue(this, inProgress);\n  };\n}\n\nfunction bindCache (org) {\n  return function (...args) {\n    if (inProgress === X) {\n      if (handlingCache) {\n        return org.apply(this, args);\n      }\n      try {\n        handlingCache = true;\n\n        resultCacheIndex += 1;\n        const res = org.apply(this, args);\n        resultCache[resultCacheIndex] = res;\n        return res;\n      } finally {\n        handlingCache = false;\n      }\n    }\n    if (inProgress === Y) {\n      resultCacheIndex += 1;\n      return resultCache[resultCacheIndex];\n    }\n    if (inProgress === Z) {\n      resultCacheIndex += 1;\n      return resultCache[resultCacheIndex];\n    }\n    if (inProgress === W) {\n      resultCacheIndex += 1;\n      return resultCache[resultCacheIndex];\n    }\n    return org.apply(this, args);\n  };\n}\n\nexport function cachedMethod (VectorClass, name) {\n  const Vector = VectorClass.prototype;\n  const org = Vector[name];\n  Vector[name] = bindCache(org);\n}\n\nexport function cachedGetter (VectorClass, name) {\n  const Vector = VectorClass.prototype;\n  const desc = Object.getOwnPropertyDescriptor(Vector, name);\n  const org = function () {\n    return desc.get.call(this);\n  };\n\n  Object.defineProperty(Vector, name, {\n    get: bindCache(org),\n  });\n}\n\nexport function defineVectorLength (VectorClass, value) {\n  const Vector = VectorClass.prototype;\n\n  Object.defineProperty(Vector, VECTOR_LENGTH, { value });\n}\n\nexport function defineMatrixLength (MatrixClass) {\n  defineVectorLength(MatrixClass, CHECK_SUM);\n}\n\nexport function cachedFactory (VectorClass) {\n  return bindCache((...args) => new VectorClass(...args));\n}\n\nexport function cachedFunction (fun) {\n  return bindCache(fun);\n}\n", "export function getVarPrefix (name) {\n  let prefix = '';\n  if (name) {\n    prefix = `${name}-`;\n  }\n  return prefix;\n}\n\nexport function convertToCSSVars (name, obj, target = {}) {\n  const prefix = getVarPrefix(name);\n  Object.entries(obj).forEach(([key, value]) => {\n    target[`--${prefix}${key}`] = value;\n  });\n  return target;\n}\n", "import { isArray, normRad, isNumber } from './utils/math';\nimport {\n  cachedFunction, cachedGetter, cachedMethod, cachedValueOf, defineVectorLength, operatorCalc\n} from './operator';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst AXES = Symbol('axes');\n\nfunction angleOverGround (y1, x1, y2, x2) {\n  const atanOne = Math.atan2(y1, x1);\n  const atanTwo = Math.atan2(y2, x2);\n\n  return normRad(atanOne - atanTwo);\n}\n\nfunction square (val) {\n  return val * val;\n}\n\nclass APoint {\n  constructor (x, y) {\n    if (typeof x === 'function') {\n      operatorCalc(x, (nx, ny) => {\n        this[AXES] = [nx, ny];\n      });\n    } else if (isArray(x)) {\n      this[AXES] = [...x];\n    } else if (x && isNumber(x.x)) {\n      this[AXES] = [x.x || 0, x.y || 0];\n    } else {\n      this[AXES] = [x || 0, y || 0];\n    }\n  }\n\n  valueOf () {\n    throw new Error('valueOf() not implemented, looks like you try to calculate outside of calc');\n  }\n\n  normalize () {\n    const { length } = this;\n    return new this.constructor(this.x / length, this.y / length);\n  }\n\n  norm () {\n    return this.normalize();\n  }\n\n  // methods ispired by\n  // https://evanw.github.io/lightgl.js/docs/point.html\n\n  dot (v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  getRad () {\n    return normRad(Math.atan2(this.y, this.x));\n  }\n\n  angleTo (v) {\n    return angleOverGround(this.y, this.x, v.y, v.x);\n  }\n\n  rotate (angle) {\n    const sa = Math.sin(angle);\n    const ca = Math.cos(angle);\n\n    const x = this.x * ca - this.y * sa;\n    const y = this.x * sa + this.y * ca;\n\n    return new this.constructor(x, y);\n  }\n\n  distance (v) {\n    return Math.sqrt(square(this.x - v.x) + square(this.y - v.y));\n  }\n\n  dist (v) {\n    return this.distance(v);\n  }\n\n  toArray () {\n    return [this.x, this.y];\n  }\n\n  calc (alg) {\n    throw new Error('calc() not implemented');\n  }\n\n  clone () {\n    throw new Error('clone() not implemented');\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y;\n  }\n\n  toJSON () {\n    return { x: this.x, y: this.y };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n\n  get lengthSq () {\n    return this.dot(this);\n  }\n\n  get length () {\n    return Math.sqrt(this.lengthSq);\n  }\n\n  get lensq () {\n    return this.lengthSq;\n  }\n\n  get len () {\n    return this.length;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    throw new Error('get z() not implemented');\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(APoint);\ndefineVectorLength(APoint, 2);\ncachedMethod(APoint, 'dot');\ncachedMethod(APoint, 'angleTo');\ncachedMethod(APoint, 'distance');\ncachedMethod(APoint, 'toArray');\ncachedMethod(APoint, 'getRad');\ncachedGetter(APoint, 'length');\ncachedGetter(APoint, 'lengthSq');\n\nexport class Point extends APoint {\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  calc (alg) {\n    return operatorCalc(alg, this);\n  }\n\n  clone () {\n    return new Point(this.x, this.y);\n  }\n}\n\nexport class IPoint extends APoint {\n  toPoint () {\n    return new Point(this.x, this.y);\n  }\n}\n\nexport function calc (alg) {\n  return operatorCalc(alg);\n}\n\nconst pointFactory = cachedFunction((x, y) => new Point(x, y));\n\nexport const point = (x, y) => pointFactory(x, y);\n\nconst ipointFactory = cachedFunction((x, y) => new IPoint(x, y));\n\nexport const ipoint = (x, y) => ipointFactory(x, y);\n\nexport const ZERO = ipoint(0, 0);\nexport const FORWARD = ipoint(0, -1);\nexport const LEFT = ipoint(-1, 0);\n", "import {\n  acos, isArray, multQuatVec, normRad, multiplyVecMat3, isNumber\n} from './utils/math';\nimport {\n  cachedFunction, cachedGetter, cachedMethod, cachedValueOf, defineVectorLength, operatorCalc\n} from './operator';\nimport { IPoint } from './point';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst AXES = Symbol('axes');\n\nfunction square (val) {\n  return val * val;\n}\n\nclass AVector {\n  constructor (x, y, z) {\n    if (typeof x === 'function') {\n      operatorCalc(x, (nx, ny, nz) => {\n        this[AXES] = [nx, ny, nz];\n      });\n    } else if (isArray(x)) {\n      this[AXES] = [...x];\n    } else if (x && isNumber(x.x)) {\n      this[AXES] = [x.x || 0, x.y || 0, x.z || 0];\n    } else {\n      this[AXES] = [x || 0, y || 0, z || 0];\n    }\n  }\n\n  valueOf () {\n    throw new Error('valueOf() not implemented, looks like you try to calculate outside of calc');\n  }\n\n  normalize () {\n    const { length } = this;\n    return new this.constructor(\n      this.x / length,\n      this.y / length,\n      this.z / length,\n    );\n  }\n\n  norm () {\n    return this.normalize();\n  }\n\n  // methods ispired by\n  // https://evanw.github.io/lightgl.js/docs/vector.html\n\n  dot (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  cross (v) {\n    return new this.constructor(\n      this.y * v.z - this.z * v.y,\n      this.z * v.x - this.x * v.z,\n      this.x * v.y - this.y * v.x,\n    );\n  }\n\n  crossNormalize (v) {\n    const vec = this.cross(v);\n    const { length } = vec;\n    vec[AXES][X] /= length;\n    vec[AXES][Y] /= length;\n    vec[AXES][Z] /= length;\n    return vec;\n  }\n\n  cn (v) {\n    return this.crossNormalize(v);\n  }\n\n  toAngles () {\n    return {\n      theta: Math.atan2(this.z, this.x),\n      phi: Math.asin(this.y / this.length),\n    };\n  }\n\n  angleTo (v) {\n    return normRad(acos(this.dot(v) / (this.length * v.length)));\n  }\n\n  multiply (quat) {\n    if (quat.x === undefined) {\n      return this.multiplyMat3(quat);\n    }\n    if (quat.w === undefined) {\n      return this.multiplyVec3(quat);\n    }\n    return multQuatVec(quat, this);\n  }\n\n  multiplyMat3 (other) {\n    return multiplyVecMat3(this, other);\n  }\n\n  multiplyVec3 ({ x, y, z }) {\n    return new this.constructor(\n      this.x * x,\n      this.y * y,\n      this.z * z\n    );\n  }\n\n  distance (v) {\n    return Math.sqrt(\n      square(this.x - v.x) + square(this.y - v.y) + square(this.z - v.z),\n    );\n  }\n\n  dist (v) {\n    return this.distance(v);\n  }\n\n  toArray () {\n    return [this.x, this.y, this.z];\n  }\n\n  swizzle (target) {\n    const data = target.split('')\n      .map(t => this[t]);\n    if (data.length === 2) {\n      return new IPoint(data[0], data[1]);\n    }\n    return new this.constructor(data[0], data[1], data[2]);\n  }\n\n  calc (arg) {\n    throw new Error('calc() not implemented');\n  }\n\n  clone () {\n    throw new Error('clone() not implemented');\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z;\n  }\n\n  toJSON () {\n    return { x: this.x, y: this.y, z: this.z };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n\n  get lengthSq () {\n    return this.dot(this);\n  }\n\n  set lengthSq (_) {\n    throw new Error('set lengthSq() not implemented');\n  }\n\n  get length () {\n    return Math.sqrt(this.lengthSq);\n  }\n\n  set length (_) {\n    throw new Error('set length() not implemented');\n  }\n\n  get lensq () {\n    return this.lengthSq;\n  }\n\n  set lensq (_) {\n    throw new Error('set lensq() not implemented');\n  }\n\n  get len () {\n    return this.length;\n  }\n\n  set len (_) {\n    throw new Error('set len() not implemented');\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  get xy () {\n    return new IPoint(this[AXES][X], this[AXES][Y]);\n  }\n\n  set xy (_) {\n    throw new Error('set xz() not implemented');\n  }\n\n  get xz () {\n    return new IPoint(this[AXES][X], this[AXES][Z]);\n  }\n\n  set xz (_) {\n    throw new Error('set xz() not implemented');\n  }\n\n  get yz () {\n    return new IPoint(this[AXES][Y], this[AXES][Z]);\n  }\n\n  set yz (_) {\n    throw new Error('set yz() not implemented');\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(AVector);\ndefineVectorLength(AVector, 3);\ncachedMethod(AVector, 'dot');\ncachedMethod(AVector, 'cross');\ncachedMethod(AVector, 'crossNormalize');\ncachedMethod(AVector, 'toAngles');\ncachedMethod(AVector, 'angleTo');\ncachedMethod(AVector, 'rotate');\ncachedMethod(AVector, 'distance');\ncachedMethod(AVector, 'toArray');\ncachedGetter(AVector, 'length');\ncachedGetter(AVector, 'lengthSq');\n\nexport class Vector extends AVector {\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  set z (z) {\n    this[AXES][Z] = z;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  calc (alg) {\n    return operatorCalc(alg, this);\n  }\n\n  clone () {\n    return new Vector(this.x, this.y, this.z);\n  }\n}\n\nexport class Victor extends AVector {\n  toVector () {\n    return new Vector(this.x, this.y, this.z);\n  }\n\n  clone () {\n    return this;\n  }\n}\n\nexport function calc (alg) {\n  return operatorCalc(alg);\n}\n\nconst vectorFactory = cachedFunction((x, y, z) => new Vector(x, y, z));\n\nexport const vector = (x, y, z) => vectorFactory(x, y, z);\n\nconst victorFactory = cachedFunction((x, y, z) => new Victor(x, y, z));\n\nexport const victor = (x, y, z) => victorFactory(x, y, z);\n\nexport const ZERO = victor(0, 0, 0);\nexport const FORWARD = victor(0, 0, -1);\nexport const BACK = victor(0, 0, 1);\nexport const LEFT = victor(-1, 0, 0);\nexport const RIGHT = victor(1, 0, 0);\nexport const UP = victor(0, 1, 0);\nexport const BOTTOM = victor(0, -1, 0);\nexport const ONE = victor(1, 1, 1);\n", "import { normRad, isNumber } from './utils/math';\nimport { convertToCSSVars } from './utils/css';\n\nconst ANGLE = Symbol('angle rad');\nconst DEG_TO_RAD = Math.PI / 180;\nconst RAD_TO_DEG = 180 / Math.PI;\n\nclass ADegree {\n  constructor (angle) {\n    if (angle instanceof ADegree) {\n      this[ANGLE] = angle[ANGLE];\n    } else {\n      this[ANGLE] = normRad(angle * DEG_TO_RAD);\n    }\n  }\n\n  valueOf () {\n    return this[ANGLE];\n  }\n\n  toJSON () {\n    return { angle: this[ANGLE] };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n}\n\nexport class Degree extends ADegree {\n  set (angle) {\n    if (angle instanceof ADegree) {\n      this[ANGLE] = angle[ANGLE];\n    } else {\n      this[ANGLE] = normRad((angle || 0) * DEG_TO_RAD);\n    }\n  }\n}\n\nexport class IDegree extends ADegree {\n  toDegree () {\n    return new Degree(this[ANGLE]);\n  }\n}\n\nconst ZERO = new IDegree(0);\n\nexport function degree (angle) {\n  return new Degree(angle);\n}\n\nexport function idegree (angle) {\n  if (angle instanceof IDegree) {\n    return angle;\n  }\n  if (!angle) {\n    return ZERO;\n  }\n  return new IDegree(angle);\n}\n\nexport function isAngle (angle) {\n  return isNumber(angle) || angle instanceof ADegree;\n}\n", "import {\n  FORWARD, LEFT, RIGHT, UP\n} from './vector';\nimport { isArray, multQuatVec, isNumber } from './utils/math';\nimport {\n  cachedFunction, defineMatrixLength, cachedValueOf\n} from './operator';\nimport { degree, isAngle } from './degree';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst W = 3;\nconst AXES = Symbol('axes');\n\nconst FORWARD_CACHE = Symbol('forward cache');\nconst LEFT_CACHE = Symbol('left cache');\nconst UP_CACHE = Symbol('up cache');\nconst INVERSE_CACHE = Symbol('inverse cache');\n\nfunction length ([x, y, z, w]) {\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\nfunction normalize (axes) {\n  const len = length(axes);\n  axes[X] /= len;\n  axes[Y] /= len;\n  axes[Z] /= len;\n  axes[W] /= len;\n}\n\nfunction look (forward, up) {\n  const vector = forward.normalize();\n  const vector2 = up.crossNormalize(vector);\n  const vector3 = vector.crossNormalize(vector2);\n  const m00 = vector2.x;\n  const m01 = vector2.y;\n  const m02 = vector2.z;\n  const m10 = vector3.x;\n  const m11 = vector3.y;\n  const m12 = vector3.z;\n  const m20 = vector.x;\n  const m21 = vector.y;\n  const m22 = vector.z;\n\n  const num8 = (m00 + m11) + m22;\n  const quat = new Array(4);\n  if (num8 > 0) {\n    let num = Math.sqrt(num8 + 1);\n    quat[W] = num * 0.5;\n    num = 0.5 / num;\n    quat[X] = (m12 - m21) * num;\n    quat[Y] = (m20 - m02) * num;\n    quat[Z] = (m01 - m10) * num;\n    return quat;\n  }\n  if ((m00 >= m11) && (m00 >= m22)) {\n    const num7 = Math.sqrt(((1 + m00) - m11) - m22);\n    const num4 = 0.5 / num7;\n    quat[X] = 0.5 * num7;\n    quat[Y] = (m01 + m10) * num4;\n    quat[Z] = (m02 + m20) * num4;\n    quat[W] = (m12 - m21) * num4;\n    return quat;\n  }\n  if (m11 > m22) {\n    const num6 = Math.sqrt(((1 + m11) - m00) - m22);\n    const num3 = 0.5 / num6;\n    quat[X] = (m10 + m01) * num3;\n    quat[Y] = 0.5 * num6;\n    quat[Z] = (m21 + m12) * num3;\n    quat[W] = (m20 - m02) * num3;\n    return quat;\n  }\n  const num5 = Math.sqrt(((1 + m22) - m00) - m11);\n  const num2 = 0.5 / num5;\n  quat[X] = (m20 + m02) * num2;\n  quat[Y] = (m21 + m12) * num2;\n  quat[Z] = 0.5 * num5;\n  quat[W] = (m01 - m10) * num2;\n  return quat;\n}\n\nfunction axisAngle (axis, angle) {\n  const quat = new Array(4);\n  const a = angle * 0.5;\n  const sa = Math.sin(a);\n  const ca = Math.cos(a);\n  quat[X] = sa * axis.x;\n  quat[Y] = sa * axis.y;\n  quat[Z] = sa * axis.z;\n  quat[W] = ca;\n  return quat;\n}\n\nfunction getQuat (x, y, z, w) {\n  if (isNumber(x)) {\n    return [x, y, z, w];\n  }\n  if (isArray(x)) {\n    return [...x];\n  }\n  if (isAngle(y)) {\n    return axisAngle(x, y);\n  }\n  if (x && y) {\n    return look(x, y);\n  }\n  return undefined;\n}\n\nfunction from (x, y, z, w) {\n  if (x && isNumber(x.w)) {\n    return getQuat(x.x, x.y, x.z, x.w);\n  }\n  return getQuat(x, y, z, w) || [0, 0, 0, 1];\n}\n\nclass AQuaternion {\n  constructor (x, y, z, w) {\n    this[AXES] = from(x, y, z, w);\n    normalize(this[AXES]);\n  }\n\n  set (x, y, z, w) {\n    throw new Error('set x() not implemented');\n  }\n\n  multiply (other, y, z, w) {\n    if (isNumber(other.w)) {\n      return this.multiplyQuaternion(other);\n    }\n    const o = getQuat(other, y, z, w);\n    if (o) {\n      return this.multiplyQuaternion(new this.constructor(o));\n    }\n    return this.multiplyVector(other);\n  }\n\n  multiplyVector (vec) {\n    return multQuatVec(this, vec);\n  }\n\n  multiplyQuaternion (quat) {\n    const q1x = this.x;\n    const q1y = this.y;\n    const q1z = this.z;\n    const q1w = this.w;\n    const q2x = quat.x;\n    const q2y = quat.y;\n    const q2z = quat.z;\n    const q2w = quat.w;\n    const x = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\n    const y = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\n    const z = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\n    const w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\n    return new this.constructor(x, y, z, w);\n  }\n\n  mul (other, y, z, w) {\n    return this.multiply(other, y, z, w);\n  }\n\n  get inverse () {\n    const {\n      x, y, z, w,\n    } = this;\n    return this.constructor(x * -1, y * -1, z * -1, w);\n  }\n\n  get inv () {\n    return this.inverse;\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n  }\n\n  get left () {\n    return this.multiplyVector(LEFT);\n  }\n\n  get dir () {\n    return this.multiplyVector(FORWARD);\n  }\n\n  get up () {\n    return this.multiplyVector(UP);\n  }\n\n  get [0] () {\n    return this.left;\n  }\n\n  get [1] () {\n    return this.dir;\n  }\n\n  get [2] () {\n    return this.up;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n\n  set w (_) {\n    throw new Error('set w() not implemented');\n  }\n\n  toJSON () {\n    const {\n      x, y, z, w\n    } = this;\n\n    return {\n      x,\n      y,\n      z,\n      w,\n      a1: 1 - ((y * y) * 2) - ((z * z) * 2),\n      a2: ((x * y) * 2) - ((z * w) * 2),\n      a3: ((x * z) * 2) + ((y * w) * 2),\n      b1: ((x * y) * 2) + ((z * w) * 2),\n      b2: 1 - ((x * x) * 2) - ((z * z) * 2),\n      b3: ((y * z) * 2) - ((x * w) * 2),\n      c1: ((x * z) * 2) - ((y * w) * 2),\n      c2: ((y * z) * 2) + ((x * w) * 2),\n      c3: 1 - ((x * x) * 2) - ((y * y) * 2)\n    };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n}\n\ncachedValueOf(AQuaternion);\ndefineMatrixLength(AQuaternion);\n\nexport class Quaternion extends AQuaternion {\n  set (x, y, z, w) {\n    if (x instanceof AQuaternion) {\n      this[AXES] = [...x[AXES]];\n    } else {\n      this[AXES] = from(x, y, z, w);\n      normalize(this[AXES]);\n    }\n  }\n\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  set z (z) {\n    this[AXES][Z] = z;\n  }\n\n  set w (w) {\n    this[AXES][W] = w;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n}\n\nfunction fromCache (scope, key, fn) {\n  let res = scope[key];\n  if (!res) {\n    res = fn();\n    scope[key] = res;\n  }\n  return res;\n}\n\nexport class IQuaternion extends AQuaternion {\n  get left () {\n    return fromCache(this, LEFT_CACHE, () => this.multiplyVector(LEFT));\n  }\n\n  get dir () {\n    return fromCache(this, FORWARD_CACHE, () => this.multiplyVector(FORWARD));\n  }\n\n  get up () {\n    return fromCache(this, UP_CACHE, () => this.multiplyVector(UP));\n  }\n\n  get inverse () {\n    return fromCache(this, INVERSE_CACHE, () => {\n      const {\n        x, y, z, w,\n      } = this;\n      return this.constructor(x * -1, y * -1, z * -1, w);\n    });\n  }\n}\n\nconst q = new Quaternion();\n\nconst quaternionFactory = cachedFunction((x, y, z, w) => new Quaternion(x, y, z, w));\n\nexport const quaternion = (x, y, z, w) => quaternionFactory(x, y, z, w);\n\nconst iquaternionFactory = cachedFunction((x, y, z, w) => new IQuaternion(x, y, z, w));\n\nexport const iquaternion = (x, y, z, w) => iquaternionFactory(x, y, z, w);\n\nconst LEFT90 = new IQuaternion(LEFT, degree(90));\n\nexport function fromOrientation ({ alpha, beta, gamma }, orientation) {\n  let rot = iquaternion(UP, degree(alpha))\n    .mul(RIGHT, degree(beta))\n    .mul(FORWARD, degree(gamma))\n    .mul(LEFT90);\n\n  rot = iquaternion(rot.dir, degree(orientation))\n    .mul(rot);\n\n  return rot;\n}\n\nexport const IDENTITY = iquaternion(0, 0, 0, 1);\n", "import { isArray, isNumber } from './utils/math';\nimport {\n  cachedFunction, cachedMethod, cachedValueOf, defineVectorLength, operatorCalc\n} from './operator';\nimport { convertToCSSVars } from './utils/css';\n\nconst X = 0;\nconst Y = 1;\nconst Z = 2;\nconst W = 3;\nconst AXES = Symbol('axes');\n\nclass AColor {\n  constructor (x, y, z, w) {\n    if (typeof x === 'function') {\n      operatorCalc(x, (nx, ny, nz, nw) => {\n        this[AXES] = [nx, ny, nz, nw];\n      });\n    } else if (isArray(x)) {\n      this[AXES] = [...x];\n    } else if (x && isNumber(x.x)) {\n      this[AXES] = [x.x || 0, x.y || 0, x.z || 0, x.w || 0];\n    } else {\n      this[AXES] = [x || 0, y || 0, z || 0, w || 0];\n    }\n  }\n\n  dot (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n\n  valueOf () {\n    throw new Error('valueOf() not implemented, looks like you try to calculate outside of calc');\n  }\n\n  toArray () {\n    return [this.x, this.y, this.z, this.w];\n  }\n\n  calc (alg) {\n    throw new Error('calc() not implemented');\n  }\n\n  clone () {\n    throw new Error('clone() not implemented');\n  }\n\n  equals (v) {\n    return this.x === v.x && this.y === v.y && this.z === v.z && this.w === v.w;\n  }\n\n  toJSON () {\n    return {\n      x: this.x, y: this.y, z: this.z, w: this.w\n    };\n  }\n\n  toString () {\n    return JSON.stringify(this.toJSON());\n  }\n\n  toCSSVars (name, target) {\n    return convertToCSSVars(name, this.toJSON(), target);\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  set x (_) {\n    throw new Error('set x() not implemented');\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  set y (_) {\n    throw new Error('set y() not implemented');\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  set z (_) {\n    throw new Error('set z() not implemented');\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n\n  set w (_) {\n    throw new Error('set w() not implemented');\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(AColor);\ndefineVectorLength(AColor, 4);\ncachedMethod(AColor, 'toArray');\n\nexport class Color extends AColor {\n  set x (x) {\n    this[AXES][X] = x;\n  }\n\n  set y (y) {\n    this[AXES][Y] = y;\n  }\n\n  set z (z) {\n    this[AXES][Z] = z;\n  }\n\n  set w (w) {\n    this[AXES][W] = w;\n  }\n\n  get x () {\n    return this[AXES][X];\n  }\n\n  get y () {\n    return this[AXES][Y];\n  }\n\n  get z () {\n    return this[AXES][Z];\n  }\n\n  get w () {\n    return this[AXES][W];\n  }\n\n  calc (alg) {\n    return operatorCalc(alg, this);\n  }\n\n  clone () {\n    return new Color(this.x, this.y);\n  }\n}\n\nexport class IColor extends AColor {\n  toColor () {\n    return new Color(this.x, this.y, this.z, this.w);\n  }\n}\n\nexport function calc (alg) {\n  return operatorCalc(alg);\n}\n\nconst colorFactory = cachedFunction((x, y, z, w) => new Color(x, y, z, w));\n\nexport const color = (x, y, z, w) => colorFactory(x, y, z, w);\n\nconst icolorFactory = cachedFunction((x, y, z, w) => new IColor(x, y, z, w));\n\nexport const icolor = (x, y, z, w) => icolorFactory(x, y, z, w);\n", "import { defineMatrixLength, cachedValueOf } from './operator';\nimport { multiplyMat3Mat3, multiplyMat3Vec } from './utils/math';\n\nconst AXES = Symbol('data');\n\nclass AMat3 {\n  constructor (...columns) {\n    this[AXES] = columns;\n  }\n\n  get [0] () {\n    return this[AXES][0];\n  }\n\n  set [0] (_) {\n    throw new Error('set [0] not implemented');\n  }\n\n  get [1] () {\n    return this[AXES][1];\n  }\n\n  set [1] (_) {\n    throw new Error('set [1] not implemented');\n  }\n\n  get [2] () {\n    return this[AXES][2];\n  }\n\n  set [2] (_) {\n    throw new Error('set [2] not implemented');\n  }\n\n  multiplyMat (other) {\n    return multiplyMat3Mat3(this, other);\n  }\n\n  multiplyVec (other) {\n    return multiplyMat3Vec(this, other);\n  }\n\n  multiply (other) {\n    if (other instanceof AMat3) {\n      return this.multiplyMat(other);\n    }\n    const { x, y, z } = other;\n    if (x === undefined || y === undefined || z === undefined) {\n      throw new Error(`multiply only works with mat3 and vec3, not supported ${other}`);\n    }\n    return this.multiplyVec(other);\n  }\n\n  [Symbol.iterator] () {\n    return this[AXES].values();\n  }\n}\n\ncachedValueOf(AMat3);\ndefineMatrixLength(AMat3);\n\nexport class IMat3 extends AMat3 {\n\n}\n", "const DEG_TO_RAD = Math.PI / 180;\nconst RAD_TO_DEG = 180 / Math.PI;\n\nexport function radians (degree) {\n  return degree * DEG_TO_RAD;\n}\n\nexport function degrees (radian) {\n  return radian * RAD_TO_DEG;\n}\n", "import { Vector } from './vector';\n\nexport { operatorCalc as calc } from './operator';\nexport {\n  Vector, Victor, Victor as IVector, vector, victor, victor as ivector, FORWARD, LEFT, UP, RIGHT\n} from './vector';\nexport {\n  Point, IPoint, point, ipoint\n} from './point';\nexport {\n  Quaternion, IQuaternion, IDENTITY, quaternion, iquaternion, fromOrientation\n} from './quaternion';\nexport {\n  Degree, IDegree, degree, idegree\n} from './degree';\nexport {\n  Color, IColor, color, icolor\n} from './color';\nexport { IMat3 } from './mat3';\nexport { radians, degrees } from './angles';\n\nexport default Vector;\n"],
  "mappings": "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",
  "names": ["isArray", "arr", "multQuatVec", "quat", "vec", "x", "y", "z", "qx", "qy", "qz", "qw", "ix", "iy", "iz", "iw", "rx", "ry", "rz", "angle180", "angle360", "normRad", "angle", "mod", "acos", "fValue", "multiplyMat3Mat3", "matLeft", "mat0", "mat1", "mat2", "column0", "column1", "column2", "multiplyMat3Vec", "multiplyVecMat3", "vecLeft", "isNumber", "nr", "X", "Y", "Z", "W", "CHECK_SUM", "DEFAULT", "VECTOR_LENGTH", "GET_SOURCE", "CHECKED", "inProgress", "inVector", "elCount", "allChecks", "collect", "resultCacheIndex", "handlingCache", "resultCache", "handleProgess", "progess", "alg", "resVec", "res", "getVectorLength", "getSource", "maxVector", "v1", "v2", "getVectorValue", "index", "setVectorValue", "value", "operatorCalc", "result", "noRes", "funRes", "inLen", "checkSum", "sum", "last", "i", "current", "len", "target", "val", "cachedValueOf", "VectorClass", "Vector", "name", "org", "bindCache", "args", "cachedMethod", "cachedGetter", "desc", "defineVectorLength", "defineMatrixLength", "MatrixClass", "cachedFunction", "fun", "getVarPrefix", "prefix", "convertToCSSVars", "obj", "key", "AXES", "angleOverGround", "y1", "x1", "y2", "x2", "atanOne", "atanTwo", "square", "APoint", "nx", "ny", "length", "v", "sa", "ca", "_", "Point", "IPoint", "pointFactory", "point", "ipointFactory", "ipoint", "ZERO", "FORWARD", "LEFT", "AVector", "nz", "other", "data", "t", "arg", "Victor", "vectorFactory", "vector", "victorFactory", "victor", "BACK", "RIGHT", "UP", "BOTTOM", "ONE", "ANGLE", "DEG_TO_RAD", "RAD_TO_DEG", "ADegree", "Degree", "IDegree", "degree", "idegree", "isAngle", "FORWARD_CACHE", "LEFT_CACHE", "UP_CACHE", "INVERSE_CACHE", "w", "normalize", "axes", "look", "forward", "up", "vector2", "vector3", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "num8", "num", "num7", "num4", "num6", "num3", "num5", "num2", "axisAngle", "axis", "a", "getQuat", "from", "AQuaternion", "o", "q1x", "q1y", "q1z", "q1w", "q2x", "q2y", "q2z", "q2w", "Quaternion", "fromCache", "scope", "fn", "IQuaternion", "q", "quaternionFactory", "quaternion", "iquaternionFactory", "iquaternion", "LEFT90", "fromOrientation", "alpha", "beta", "gamma", "orientation", "rot", "IDENTITY", "AColor", "nw", "Color", "IColor", "colorFactory", "color", "icolorFactory", "icolor", "AMat3", "columns", "IMat3", "radians", "degrees", "radian", "src_default"]
}
